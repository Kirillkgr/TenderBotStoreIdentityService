name: Docs → GitHub Wiki

on:
  push:
    branches: [ master ]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'README.md'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Checkout Wiki repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          path: wiki

      - name: Sync Markdown docs to Wiki (set Home.md)
        run: |
          set -e
          set -x
          # Clean wiki directory except .git
          find wiki -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +
          # Copy markdown sources
          cp -r docs/* wiki/
          # Normalize links: convert ")(.md)" links to wiki-style without extension across copied files
          # This replaces occurrences of ](path.md) with ](path)
          if command -v sed >/dev/null 2>&1; then
            find wiki -type f -name "*.md" -print0 | xargs -0 sed -i "s/](\([^)#?]*\)\.md)/](\1)/g"
            # Also handle anchors: ](path.md#anchor) -> ](path#anchor)
            find wiki -type f -name "*.md" -print0 | xargs -0 sed -i -E 's/\]\(([^)#?]+)\.md#/\]\(\1#/'
          fi

          # Create root-level slug files to match (wiki/<slug>) links used in repo
          # Architecture ER schema
          if [ -f wiki/architecture/er-schema.md ]; then
            cp wiki/architecture/er-schema.md wiki/er-schema.md
          fi
          # Architecture Multitenancy
          if [ -f wiki/architecture/multitenancy.md ]; then
            cp wiki/architecture/multitenancy.md wiki/multitenancy.md
          fi
          # Inventory and Supplies pages
          if [ -f wiki/services/inventory.md ]; then
            cp wiki/services/inventory.md wiki/inventory.md
          fi
          if [ -f wiki/services/supplies-and-stock.md ]; then
            cp wiki/services/supplies-and-stock.md wiki/supplies-and-stock.md
          fi
          # Backend supplements aliases
          if [ -f wiki/backend/swagger.md ]; then
            cp wiki/backend/swagger.md wiki/swagger.md
          fi
          if [ -f wiki/backend/cookies-and-cors.md ]; then
            cp wiki/backend/cookies-and-cors.md wiki/cookies-and-cors.md
          fi
          if [ -f wiki/backend/tenant-context.md ]; then
            cp wiki/backend/tenant-context.md wiki/tenant-context.md
          fi
          if [ -f wiki/backend/order-acl.md ]; then
            cp wiki/backend/order-acl.md wiki/order-acl.md
          fi
          if [ -f wiki/backend/migrations.md ]; then
            cp wiki/backend/migrations.md wiki/migrations.md
          fi
          # Frontend aliases
          if [ -f wiki/frontend/frontindex.md ]; then
            cp wiki/frontend/frontindex.md wiki/frontindex.md
          fi
          if [ -f wiki/frontend/auth.md ]; then
            cp wiki/frontend/auth.md wiki/frontend-auth.md
          fi
          if [ -f wiki/frontend/context.md ]; then
            cp wiki/frontend/context.md wiki/frontend-context.md
          fi
          if [ -f wiki/frontend/inventory-stock.md ]; then
            cp wiki/frontend/inventory-stock.md wiki/frontend-inventory-stock.md
          fi
          if [ -f wiki/frontend/notifications-longpoll.md ]; then
            cp wiki/frontend/notifications-longpoll.md wiki/frontend-notifications-longpoll.md
          fi
          if [ -f wiki/frontend/inventory-crud.md ]; then
            cp wiki/frontend/inventory-crud.md wiki/frontend-inventory-crud.md
          fi
          # Services aliases (stable)
          if [ -f wiki/services/auth.md ]; then
            cp wiki/services/auth.md wiki/auth.md
          fi
          if [ -f wiki/services/context.md ]; then
            cp wiki/services/context.md wiki/context.md
          fi
          if [ -f wiki/services/rbac.md ]; then
            cp wiki/services/rbac.md wiki/rbac.md
          fi
          if [ -f wiki/services/menu.md ]; then
            cp wiki/services/menu.md wiki/menu.md
          fi
          if [ -f wiki/services/health.md ]; then
            cp wiki/services/health.md wiki/health.md
          fi
          if [ -f wiki/services/errors.md ]; then
            cp wiki/services/errors.md wiki/errors.md
          fi
          if [ -f wiki/services/admin-clients.md ]; then
            cp wiki/services/admin-clients.md wiki/admin-clients.md
          fi
          # Force refresh Home.md and generate from docs/index.md (links already normalized above)
          rm -f wiki/Home.md || true
          echo "--- DEBUG: HEAD of wiki/index.md (source) ---" || true
          head -n 20 wiki/index.md || true
          echo "--- DEBUG: md5 of wiki/index.md ---" || true
          (command -v md5sum >/dev/null 2>&1 && md5sum wiki/index.md) || true
          if [ -f wiki/index.md ]; then
            cp wiki/index.md wiki/Home.md
          else
            # Fallback: minimal template
            printf '%s\n' \
              '# TenderBotStore — Документация' \
              '' \
              'Добро пожаловать! Здесь описаны основы платформы и сервисов.' \
              '' \
              '## Быстрые ссылки' \
              '' \
              '- Архитектура → [ER‑схема](architecture/er-schema)' \
              '- Архитектура → [Многотенантность и контекст](architecture/multitenancy)' \
              '- Backend → [Гайд по миграциям (Liquibase)](backend/migrations)' \
              '- Frontend → [Контекст на фронте](frontend/context)' \
              '' \
              '### Сервисы (стабильные)' \
              '' \
              '- [Auth](services/auth)' \
              '- [Context](services/context)' \
              '- [RBAC](services/rbac)' \
              '- [Public Menu](services/menu)' \
              '- [Health](services/health)' \
              '- [Ошибки и коды](services/errors)' \
              > wiki/Home.md
          fi
          # Ensure sidebar exists (links without .md extensions)
          if [ ! -f wiki/_Sidebar.md ]; then
            printf '%s\n' \
              '* [Home](Home)' \
              '* [Архитектура](architecture/er-schema)' \
              '* [Многотенантность и контекст](architecture/multitenancy)' \
              '* [RBAC](services/rbac)' \
              '* [Миграции (Liquibase)](backend/migrations)' \
              > wiki/_Sidebar.md
          fi

      - name: Commit and push to Wiki
        run: |
          cd wiki
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update wiki from push $GITHUB_SHA"
            git push
          fi
