name: Monorepo CI (Frontend + Backend)

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  changes:
    name: Detect changed projects
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'Front/**'
              - '.github/workflows/**frontend**.yml'
            backend:
              - 'src/**'
              - 'pom.xml'
              - 'mvnw'
              - 'mvnw.cmd'
              - 'Dockerfile'
              - '.github/workflows/**backend**.yml'

  frontend:
    name: Frontend tests
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Front
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Front/package-lock.json

      - name: Install dependencies
        run: npm ci || npm i

      - name: Run unit tests
        run: npm run test

  backend:
    name: Backend tests
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Grant execute permission for mvnw
        run: chmod +x ./mvnw

      - name: Build & test with Maven (unit + integration)
        run: ./mvnw -B -ntp clean verify

      - name: Upload JUnit reports (Surefire/Failsafe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports-backend
          path: |
            target/surefire-reports/**
            target/failsafe-reports/**
          if-no-files-found: warn
