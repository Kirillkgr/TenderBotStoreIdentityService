server:
  port: ${SERVER_PORT:9900}
  tomcat:
    connection-timeout: 120s
  servlet:
    session:
      cookie:
        domain: ${APP_COOKIE_DOMAIN:}

spring:
  jpa:
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: validate

    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    url: jdbc:postgresql://localhost:5433/identity_db
    username: postgres
    password: postgres


  mvc:
    async:
      request-timeout: 120s

  properties:
    hibernate:

      dialect: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    contexts: default,prod

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope: openid,profile,email
            redirect-uri: ${GOOGLE_REDIRECT_URI:https://kirillkgr.ru/login/oauth2/code/google}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
        provider:
          google:
            issuer-uri: https://accounts.google.com
            token-uri: https://oauth2.googleapis.com/token


  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration
      - org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration
      - org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration
      - org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration
      - org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration
      - org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration
      - org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration
      - org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration
      - org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration
      - org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration
      - org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration
      - org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
      - org.springframework.boot.autoconfigure.pulsar.PulsarAutoConfiguration
      - org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration
      - org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration
      - org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration
      - org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration
      - org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration
      - org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration
      - org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration

app:
  seed:
    demoData: false
  cookie:
    secure: ${Cookie_Secure:true}

  front:
    success-redirect: "https://kirillkgr.ru"
    failure-redirect: "https://kirillkgr.ru"


# JWT Configuration
jwt:
  secret: your_jwt_secret_key_please_change_in_production_environment
  access:
    expiration: 36000000  # 1 час в миллисекундах
  refresh:
    expiration: 25920000000  # 30 дней в миллисекундах


address:
  service:
    front-service-cors:
      list:
        - "https://kirillkgr.ru"
        - "http://kirillkgr.ru"
        - "http://localhost:5173"
        - "http://localhost:8080"
        - "http://localhost:5173/"
        - "http://*.localhost:5173/"
        - "http://amd:8080"
        - "http://*.amd:8080"

s3:
  endpoint: https://storage.yandexcloud.net
  region: ru-central1
  bucket: kirillkgr.ru
  accessKey: ${S3_ACCESS_KEY:change-me}
  secretKey: ${S3_SECRET_KEY:change-me}
  publicBaseUrl: https://storage.yandexcloud.net/kirillkgr.ru
  cache:
    maxAgeSeconds: 2592000


springdoc:
  api-docs:
    path: /doc/api-docs
  swagger-ui:
    path: /doc/swagger
    url: /doc/api-docs
    disable-swagger-default-url: true
    display-request-duration: true
    operationsSorter: alpha
    tagsSorter: alpha