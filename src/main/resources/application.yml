server:
  port: ${SERVER_PORT:9900}
  servlet:
    session:
      cookie:
        domain: ${APP_COOKIE_DOMAIN:}

spring:
  datasource:
    url: jdbc:postgresql://localhost:5433/identity_db
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false

    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    contexts: default,prod


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope: openid,profile,email
            redirect-uri: ${GOOGLE_REDIRECT_URI:https://kirillkgr.ru/login/oauth2/code/google}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
        provider:
          google:
            issuer-uri: https://accounts.google.com
            token-uri: https://oauth2.googleapis.com/token

app:
  front:
    success-redirect: "https://kirillkgr.ru"
    failure-redirect: "https://kirillkgr.ru"


# JWT Configuration
jwt:
  secret: your_jwt_secret_key_please_change_in_production_environment
  access:
    expiration: 36000000  # 1 час в миллисекундах
  refresh:
    expiration: 25920000000  # 30 дней в миллисекундах


address:
  service:
    front-service-cors:
      list:
        - "https://kirillkgr.ru"
        - "http://kirillkgr.ru"
        - "http://localhost:5173"
        - "http://localhost:8080"
        - "http://localhost:5173/"